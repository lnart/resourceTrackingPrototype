<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/overviewGas.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.1.2/dist/chart.umd.min.js"></script>
    <title>Document</title>
</head>
<body>
  <header>
    <div class="heading">
      <h2>Keep It Safe</h2>
      <h3 class="headline-2">Track Your Gas Consumption</h3>
    </div>
  </header>
  <div class="navbar">
    <a href="http://localhost:8000/">Home</a>
    <a href="">Support</a>
    <form action="/logout" method="POST">
      <button>
        LogOut
      </button>
    </div>
    </form>
    <select name="year" id="year">
      <option value="2021">2021</option>
      <option value="2022">2022</option>
      <option value="2023" selected>2023</option>
      <option value="2024">2024</option>
      <option value="2025">2025</option>
  </select>
  <canvas class="chart" id='myChart' width="100" height="25"></canvas>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  
  <script>
    const ctx = document.getElementById('myChart');
    const year = document.getElementById('year');
    
    let sortedDataSet = JSON.parse(`<%- JSON.stringify(sortedDataSet) %>`)
    
    function extractCounts(object, year){
      console.log("year: old", year)
      const counts = []
      for(let i = 0; i<object[year].length; i++){
        counts.push(object[year][i]['count'])
      }
      return counts
    }
    
    function calculateGasPrice(array){
      let price = []
      for(let i = 0; i<array.length; i++){
        price.push(array[i] / 2.965)
      }return price
    }
    
    let gasCounts = extractCounts(sortedDataSet, year.value);
    let gasPrice = calculateGasPrice(gasCounts)
    
    year.addEventListener("change", () => {
      const yearValue = year.value;
      const actualValue = year.options[year.selectedIndex].text;
      gasCounts = extractCounts(sortedDataSet, actualValue)
      gasPrice = calculateGasPrice(gasCounts)
      
      const currentChart = document.getElementById('myChart');
      currentChart.remove()
      
      const newCanvas = document.createElement("canvas")
      newCanvas.id = "myChart"
      newCanvas.class = 'chart'
      newCanvas.setAttribute("width", "100")
      newCanvas.setAttribute("height", "25")
      document.body.append(newCanvas)
      createChart(newCanvas)
    })
    
    function createChart(canvasElement) {
      
      new Chart(canvasElement, {
        type: 'line',
        data: {
          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'Octobre', 'November', 'December'],
          datasets: [{
            label: 'Consumption in KwH',
            data: gasCounts,
            borderWidth: 1
          }, {
            type: 'line',
            data: gasPrice,
            label: 'Price in Euro'
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
              max: 5000,
            }
          }
        }
      });
      
    }
    
    createChart(ctx)
    
    </script>
<div class="bills">
  <div class="numbers">
    <p><%= returnMonthlyBill() %></p>
  </div>
</div>
</body>
</html>